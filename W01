# Week 1

# https://school.programmers.co.kr/learn/courses/30/lessons/161989

def solution(n, m, section):
    answer = 0
    painted = 0

    for s in section:
        if s >= painted:
            painted = s + m
            answer += 1
            
    return answer

# https://school.programmers.co.kr/learn/courses/30/lessons/159994

def solution(cards1, cards2, goal):
    answer = 'Yes'
    idx1 = idx2 = 0

    for g in goal:
        if (idx1 < len(cards1)) and cards1[idx1] == g:
            idx1 += 1
        elif (idx2 < len(cards2)) and cards2[idx2] == g:
            idx1 += 1
        else: 
            answer = 'No'
            break

    return answer
# O(n)으로 풀 수 있도록 수정

# https://school.programmers.co.kr/learn/courses/30/lessons/155652

def solution(s, skip, index):
    answer = ''
    alpha = [chr(i) for i in range(97, 123) if chr(i) not in skip]
    
    for c in s:
        answer += alpha[(alpha.index(c) + index) % len(alpha)]
        
    return answer

# https://school.programmers.co.kr/learn/courses/30/lessons/147355

def solution(t, p):
    answer = 0
    tmp = 0
    
    for i in range(len(t)-len(p)+1):
        tmp = int(t[i:i+len(p)])
        
        if tmp <= int(p):
            answer += 1
        
    return answer